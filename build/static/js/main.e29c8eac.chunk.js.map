{"version":3,"sources":["components/Theme.jsx","components/Input-Header.jsx","components/Task.jsx","components/ActionBar.jsx","App.js","index.js"],"names":["Theme","useState","isLight","setIsLight","useEffect","link","document","createElement","setAttribute","head","appendChild","onClick","querySelector","changeTheme","className","src","alt","style","display","Header","props","inputText","setInputText","value","onKeyPress","e","target","key","keyCode","obj","status","id","Date","now","task","handleTasks","type","payload","onChange","Task","state","setState","isClosed","setIsClosed","saveTasks","handleClick","prevState","checked","for","ActionBar","taskCount","setTaskCount","itemsLeft","tasks","filter","el","length","setFilter","App","setTasks","allTasks","setAllTasks","action","prevTasks","i","findIndex","temp","splice","i1","temp1","localStorage","setItem","JSON","stringify","tasksList","parse","getItem","onDragEnd","result","draggableId","source","destination","console","log","index","newArr","sourceEle","droppableId","provided","ref","innerRef","droppableProps","map","ind","draggableProps","dragHandleProps","placeholder","msg","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.e29c8eac.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react'\r\n\r\nexport default function Theme(){\r\n    const [isLight, setIsLight] = useState(false)\r\n    // Create new link element\r\n    useEffect(()=> {\r\n        const link = document.createElement('link');\r\n        link.setAttribute('rel', 'stylesheet');\r\n        link.setAttribute('href', 'css/dark-theme.css');\r\n        link.setAttribute('id', 'theme-css')\r\n\r\n        // Append to the `head` element\r\n        document.head.appendChild(link);\r\n    },[])\r\n    \r\n    function changeTheme(){\r\n        // let head = document.querySelector(\"head > link:nth-child(7)\")\r\n        let head = document.querySelector('#theme-css')\r\n        if(isLight){\r\n            head.setAttribute('href','css/dark-theme.css')\r\n            setIsLight(false)\r\n        } else {\r\n            head.setAttribute('href','css/light-theme.css')\r\n            setIsLight(true)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n         <div onClick={()=> changeTheme()} className=\"theme-container\">\r\n             <img src='images/icon-sun.svg' alt='Sun' className=\"theme-icon\" style={isLight ? {display:'none'}: null} />\r\n             <img src='images/icon-moon.svg' alt='Moon' className=\"theme-icon\" style={isLight ? null: {display:'none'}}/></div>\r\n        </>\r\n    )\r\n}","import React, { useState } from 'react'\r\nimport Theme from './Theme'\r\n\r\n\r\nexport default function Header(props){\r\n    // const uuidv4 = require(\"uuid/v4\")\r\n    const [inputText, setInputText] = useState('')\r\n\r\n    function handleChange(e){\r\n        setInputText(e.target.value)\r\n    }\r\n\r\n    function handleKeyPress(e){\r\n        if(e.target.value === ''){\r\n            return\r\n        }\r\n        if (e.key === 'Enter' || e.keyCode === 13) {\r\n            let obj = {status: 'Open', id: Date.now(), task: inputText}\r\n            props.handleTasks({type:'CREATE', payload:obj})\r\n            setInputText('')\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className='header'>\r\n            <div className='grid-row book-ends'><h1 className='main-heading'>TODO</h1> <span><Theme/></span></div>\r\n            <div className='grid-row task_input mt-md'>\r\n                <div className='task-input'>\r\n                    <span></span>\r\n                    <input value={inputText} onKeyPress={handleKeyPress} onChange={handleChange}/>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React, { useEffect, useState } from 'react'\r\n\r\nexport default function Task(props){\r\n    const [state, setState] = useState({})\r\n    const [isClosed, setIsClosed] = useState(null)\r\n\r\n    useEffect(()=> {\r\n        // console.log(props.task)\r\n        setState(props.task)\r\n        \r\n    },[props])\r\n\r\n    useEffect(()=> {\r\n        if(props.task.status === 'Open'){\r\n            setIsClosed(false)\r\n        } else {\r\n            setIsClosed(true)\r\n        }\r\n        props.saveTasks()\r\n    }, [props])\r\n\r\n    const handleClick = () => {\r\n        if(isClosed){\r\n            setIsClosed(!isClosed)\r\n            setState(prevState => {\r\n                prevState.status = 'Open'\r\n                return prevState;\r\n            })\r\n        } else {\r\n            setIsClosed(!isClosed)\r\n            setState(prevState => {\r\n                prevState.status = 'Closed'\r\n                return prevState;\r\n            })\r\n        }\r\n    }\r\n\r\n    function handleDelete(){\r\n        // console.log(state)\r\n        props.handleTasks({type:'DELETE', payload:state})\r\n    }\r\n\r\n    return (\r\n        <>\r\n        \r\n        <div className=\"task-container\" >\r\n          <input id={state.id} className='checkmark-container' checked={isClosed} type='checkbox' />\r\n          <label for={state.id} onClick={()=> handleClick()}></label>\r\n          <div className=\"task-description\" id='task-description' onClick={()=> handleClick()}>{state.task}</div>\r\n          <div className=\"delete-icon\" onClick={()=> handleDelete()}></div>\r\n        </div>\r\n        \r\n        </>\r\n    )\r\n}","import React, { useEffect, useState } from 'react'\r\n\r\n\r\nexport default function ActionBar(props){\r\n  const [taskCount, setTaskCount] = useState(0)\r\n\r\n  useEffect(()=>{\r\n    let itemsLeft = props.tasks.filter(el => el.status === 'Open').length\r\n    setTaskCount(itemsLeft)\r\n  },[props.tasks])\r\n\r\n    return (\r\n        <>\r\n        <div className=\"action-bar task-container\" id='actionBar'>\r\n          <div className=''>{taskCount} items left</div>\r\n          <div className=\"main-filters\">\r\n            <span onClick={()=> props.setFilter('ALL')}\r\n              className={props.filter === 'ALL' ? 'active-filter':null}\r\n            >All</span>\r\n            <span onClick={()=> props.setFilter('ACTIVE')}\r\n              className={props.filter === 'ACTIVE' ? 'active-filter':null}\r\n            >Active</span>\r\n            <span onClick={()=> props.setFilter('COMPLETE')}\r\n              className={props.filter === 'COMPLETE' ? 'active-filter':null}\r\n            >Complete</span>\r\n          </div>\r\n          <div className=\"clear-completed\">\r\n            <span onClick={()=> props.setFilter('CLEAR-COMPLETE')}>Clear Completed</span>\r\n          </div>\r\n        </div>\r\n        <div className='drag-text'>\r\n          Drag and drop to reorder list\r\n        </div>\r\n        </>\r\n    )\r\n}","import React, { useEffect, useState } from \"react\";\r\nimport Header from './components/Input-Header.jsx';\r\nimport Task from \"./components/Task.jsx\";\r\nimport ActionBar from \"./components/ActionBar.jsx\";\r\nimport { DragDropContext, Draggable, Droppable } from 'react-beautiful-dnd';\r\n\r\n// TODO:\r\n// [X] Local Storage of State\r\n// [X] Delete tasks\r\n// [X] Filter tasks\r\n// [X] Task Filter Bar\r\n// [X] Implement Theme Changes\r\n// [X] Look into Drag and Drop functionality\r\n// [X] Mobile Responsiveness\r\n// [] Final Touches - Theming\r\n\r\n// BUG:\r\n// [X] Theming not working\r\n\r\nfunction App() {\r\n  const [tasks, setTasks] = useState([])\r\n  const [allTasks, setAllTasks] = useState([])\r\n  const [filter, setFilter] = useState('ALL')\r\n  \r\n\r\n  useEffect(()=>{\r\n    // Initial state of the application\r\n    // Checks for saved state in local storage\r\n    if(allTasks.length === 0){\r\n      let tasksList = JSON.parse(localStorage.getItem('todo-taskList'))\r\n      setTasks(tasksList)\r\n      setAllTasks(tasksList)\r\n      setFilter('ALL')\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  },[])\r\n\r\n  useEffect(()=> {\r\n    // Saves the task on load\r\n    saveTasks()\r\n  })\r\n\r\n  function handleTasks(action){\r\n    // Creates and deletes tasks\r\n    switch (action.type){\r\n      case 'CREATE':\r\n        // console.log('CREATE STUFF')\r\n        setAllTasks(prevTasks => [...prevTasks, action.payload])\r\n        setTasks(prevTasks => [...prevTasks, action.payload]) \r\n        break;\r\n\r\n      case 'DELETE':\r\n        // For Tasks\r\n        let i = tasks.findIndex(e => e.id === action.payload.id)\r\n        let temp = tasks\r\n        temp.splice(i,1)\r\n        // console.log(temp)\r\n        setTasks([...temp]) \r\n        \r\n        // For all tasks\r\n        let i1 = allTasks.findIndex(e => e.id === action.payload.id)\r\n        let temp1 = allTasks\r\n        temp1.splice(i1,1)\r\n        // console.log(temp)\r\n        setAllTasks([...temp1])    \r\n        break;\r\n\r\n      default:\r\n        setTasks(allTasks)\r\n        return\r\n    }\r\n\r\n  }\r\n\r\n  function saveTasks(){\r\n    // Saves tasks to local storage for persistance\r\n    localStorage.setItem('todo-taskList',JSON.stringify(allTasks))\r\n  }\r\n\r\n  function handleFilter(msg){\r\n    // Uses the filters to create a new array that will be used to display the tasks\r\n    setFilter(msg)\r\n  \r\n    if(msg==='ALL'){\r\n      setTasks(allTasks)\r\n    }\r\n\r\n    if(msg === 'ACTIVE'){\r\n      let temp = allTasks.filter(e => e.status === 'Open')\r\n      setTasks(temp)\r\n    }\r\n\r\n    if(msg === 'COMPLETE'){\r\n      let temp = allTasks.filter(e => e.status === 'Closed')\r\n      setTasks(temp)\r\n    }\r\n\r\n    if(msg === 'CLEAR-COMPLETE'){\r\n      setAllTasks(allTasks.filter(el => el.status === 'Open'))\r\n      setTasks(tasks.filter(el => el.status === 'Open'))\r\n      setFilter('ALL')\r\n    }\r\n  }\r\n\r\n  const onDragEnd = result => {\r\n    const {draggableId, source, destination} = result\r\n    console.log(draggableId, source, destination)\r\n    // Return if user dragged object outside of field\r\n    if(!destination){\r\n      return\r\n    }\r\n\r\n    // Return if nothing has really changed\r\n    if(source.index === source.destination){\r\n      return\r\n    }\r\n\r\n    //Reordering array\r\n    let newArr = [...tasks]\r\n    const sourceEle = newArr.splice(source.index,1)\r\n    newArr.splice(destination.index,0,...sourceEle)\r\n    \r\n    //Save to State\r\n    if(filter === 'ALL'){\r\n      setTasks(newArr)\r\n      setAllTasks(newArr)\r\n    }\r\n\r\n  }\r\n\r\n  return (\r\n    <>\r\n    \r\n    <div className='background-header'/>\r\n    <div className='grid-container'>\r\n      <Header handleTasks={handleTasks}/>\r\n      <div className='mt-md'>\r\n      <DragDropContext onDragEnd={onDragEnd}>\r\n        <Droppable droppableId='main-tasklist-1' type='TASK'>\r\n          {(provided) => (\r\n            <ul className='task-list' ref={provided.innerRef} {...provided.droppableProps}>  \r\n\r\n              { tasks.map((task, ind) => \r\n                  \r\n                    <Draggable draggableId={task.task} index={ind} key={task.id}>\r\n                      {(provided) => (\r\n                     \r\n                        <li  ref={provided.innerRef} index={ind}  {...provided.draggableProps} {...provided.dragHandleProps}>\r\n                            <Task task={task}  handleTasks={handleTasks} saveTasks={saveTasks} />\r\n                        </li>\r\n                 \r\n                 )}\r\n                    </Draggable>  \r\n                 \r\n                 )}\r\n\r\n              {provided.placeholder}\r\n            </ul> \r\n            \r\n            )}\r\n        </Droppable>\r\n      </DragDropContext>\r\n\r\n        <ActionBar tasks={tasks} handleTasks={handleTasks} filter={filter} setFilter={handleFilter}/>\r\n      </div>  \r\n    </div>\r\n    \r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}